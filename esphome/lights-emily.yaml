substitutions:
  device_name: lights-emily
  friendly_name: "Emily Lights"
  deviceicon: "mdi:light-recessed"
# Pin assignments for 2 gang 2 way model. (6952HA)
# P6 - Relay 2
# P9 - Power Sensor Switch 2
# P23 - Switch 2

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}

bk72xx:
  board: wb3s

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  reboot_timeout: 24h
  encryption:
    key: "qRWAO5qNlxXIPaFK4/uw5cG8gXDK7/nf/Bc8iz97P9Y="

ota:
  platform: esphome
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 1h

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback Hotspot"
    password: !secret fallback_password

web_server:
  port: 80

captive_portal:

sensor:
  - platform: wifi_signal
    name: ${device_name} Wifi Signal Strength
    update_interval: 60s
  - platform: uptime
    name: "${device_name} Uptime"
    filters:
      - lambda: return x / 86400.0;
    unit_of_measurement: "d"
    accuracy_decimals: 1
    update_interval: 5min

## ---------------- ##
##    Status LED    ##
## ---------------- ##
status_led:
  pin:
    number: P24
    inverted: true

output:
  # Dummy output to allow the light to have an output connected, but we don't need it to do
  # anything
  - platform: template
    type: binary
    id: dummy1
    write_action:
      then:
        # use delay 0 to supply an action that does nothing
        - delay: 0s

## ------------ ##
##     Light    ##
## ------------ ##
light:
  # Light - keeping as internal as I found it worked but if you used the other switch 2-way switch, that HA would say the light was off when the light was actually on.
  # Using the Switch at the bottom of the config to keep everything in order. But then in HA you have to set the Switch that shows up to show up as a Light.
  - platform: binary
    id: light1
    name: "${friendly_name} light"
    icon: ${deviceicon}
    output: dummy1
    on_turn_on:
      then:
        - if:
            condition:
              not:
                - script.is_running: state_change_timer1
            then:
              - switch.toggle: relay1
    on_turn_off:
      then:
        - if:
            condition:
              not:
                - script.is_running: state_change_timer1
            then:
              - switch.toggle: relay1
   
## ----------------- ##
##      Buttons      ##
## ----------------- ##
binary_sensor:
  # Top (or only) button
  - platform: gpio
    id: button
    name: "${friendly_name} Button"
    pin:
      number: P26
      inverted: true
      mode: INPUT_PULLUP
    on_press:
      - switch.toggle: relay1

  - platform: gpio
    id: power_status_1
    pin:
      number: P8
      mode: INPUT_PULLUP
      inverted: true  
    name: "Power status 1"
    on_press:
      then:
        - script.execute: state_change_timer1
        - light.turn_on: light1
    on_release:
      then:
        - script.execute: state_change_timer1
        - light.turn_off: light1

## ---------------- ##
##     Switches     ##
## ---------------- ##
switch:
  - platform: restart
    name: "${friendly_name} REBOOT"

  - platform: gpio
    id: relay1
    name: "${friendly_name} Switch"
    pin: P14

script:
  - id: state_change_timer1
    mode: restart
    then:
      - delay: 100ms
