substitutions:
  device_name: lights-toby
  friendly_name: "lights-toby"

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}

bk72xx:
  board: wb3s

# Enable logging
logger:
  level: DEBUG

wifi:
  ssid: !secret wifi_ssid_upstairs
  password: !secret wifi_password 
  reboot_timeout: 1h

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lights-Toby"
    password: !secret fallback_password

captive_portal:

# Enable Home Assistant API
api:
  reboot_timeout: 24h
  encryption:
    key: "3tuV8rfeGfPNc5jwCkeaCAyMKlrHiDYcgIweMSnGcsk="

ota:
  platform: esphome
  password: !secret ota_password

# The web_server & sensor components can be removed without affecting core functionaility.
web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

sensor:
  - platform: wifi_signal
    name: ${device_name} Wifi Signal Strength
    update_interval: 60s
  - platform: uptime
    name: "${device_name} Uptime"
    filters:
      - lambda: return x / 86400.0;
    unit_of_measurement: "d"
    accuracy_decimals: 1
    update_interval: 5min

light:
  - platform: binary
    output: relay_light
    id: light1
    name: "Toby Main"

status_led:
  pin:
    # ESP GPIO3 - RX, mod pin 21
    # WB3S RX1 (IC pin 10)
    number: RX1
    inverted: True

output:
  - platform: gpio
    id: relay_light
    # ESP GPIO14 - D5, mod pin 5
    # WB3S PWM5 (IC pin 26)
    pin: PWM5
  - platform: template
    id: fan_speed
    type: float
    write_action:
      - then:
        - if:
            condition:
              lambda: return ((state > 0) && (state < .4));
            then:
              - switch.turn_on: relay_fan_1
              - delay: 20ms
              - switch.turn_off: relay_fan_2
              - delay: 20ms
              - switch.turn_off: relay_fan_3
        - if:
            condition:
              lambda: return ((state > .4) && (state < .7));
            then:
              - switch.turn_on: relay_fan_1
              - delay: 20ms
              # Note: the public template for this turns on 1 & 2 and leaves 3 off, but runs at
              # what appears to be full speed. I _think_ tasmota template turns 1 & 3 instead, and
              # that appears to have a better speed gradution.
              # https://www.esphome-devices.com/devices/Deta-Grid-Connect-Smart-Fan-Speed-Controller-with-Touch-Light-Switch 
              # https://templates.blakadder.com/deta_6914HA.html
              - switch.turn_off: relay_fan_2
              - delay: 20ms
              - switch.turn_on: relay_fan_3
        - if:
            condition:
              lambda: return (state > .7);
            then:
              - switch.turn_on: relay_fan_1
              - delay: 20ms
              - switch.turn_on: relay_fan_2
              - delay: 20ms
              - switch.turn_on: relay_fan_3
        - if:
            condition:
              lambda: return (state < 0.01);
            then:
              - switch.turn_off: relay_fan_1
              - delay: 20ms
              - switch.turn_off: relay_fan_2
              - delay: 20ms
              - switch.turn_off: relay_fan_3

binary_sensor:
  - platform: gpio
    id: fan_light_button
    pin:
      # ESP GPIO16 - D0 - mod pin 4
      # WB3S P14 (IC pin 14)
      number: P14
      mode: INPUT
      inverted: True
    on_press:
      - light.toggle: light1
  
  - platform: gpio
    id: fan_power_button
    pin:
      # ESP GPIO0 - D3 - mod pin 18
      # WB3S RXD2 (IC pin 1)
      number: P1
      mode: INPUT
      inverted: True
    on_press:
      then:
        # Toggle the fan off or on, with a special case to set the speed > 0 when turning on
        # It's off and zero after a power cycle and without this logic the button acheives nothing
        - if:
            condition:
              lambda: |-
                return !id(fan_1).state && id(fan_1).speed == 0;
            then:
              - fan.turn_on:
                  id: fan_1
                  speed: 1
            else:
              - fan.toggle: fan_1

  - platform: gpio
    id: fan_speed_button
    pin:
      # number: GPIO5 - D1 - mod pin 20
      # WB3S PWM2 (IC pin 8)
      number: P8
      mode: INPUT
      inverted: True
    on_press:
      then:
        - fan.cycle_speed: fan_1

fan:
  - platform: speed
    id: fan_1
    output: fan_speed
    name: "Tobys Fan"
    speed_count: 3

switch:
  - platform: restart
    name: "Tobys Lights Reboot"
  - platform: gpio
    id: relay_fan_1
    # ESP GPIO13 - D7 - mod pin 7
    # WB3S PWM0 (IC pin 6)
    pin: P6
  - platform: gpio
    id: relay_fan_2
    # ESP GPIO4 - D2 - mod pin 19
    # WB3S PWM3 (IC pin 9)
    pin: P9
  - platform: gpio
    id: relay_fan_3
    # ESP GPIO15 - D8 - mod pin 16
    # WB3S PWM1 (IC pin 7)
    pin: P7
  - platform: template
    id: update_fan_speed
    optimistic: True
    turn_on_action:
      then:
        - delay: 200ms
        - if:
            condition:
              and:
                - switch.is_off: relay_fan_1
                - switch.is_off: relay_fan_2
                - switch.is_off: relay_fan_3
            then:
              - fan.turn_off: fan_1
        - if:
            condition:
              and:
                - switch.is_on: relay_fan_1
                - switch.is_off: relay_fan_2
                - switch.is_off: relay_fan_3
            then:
              - fan.turn_on:
                  id: fan_1
                  speed: 1
        - if:
            condition:
              and:
                - switch.is_on: relay_fan_1
                - switch.is_on: relay_fan_2
                - switch.is_off: relay_fan_3
            then:
              - fan.turn_on:
                  id: fan_1
                  speed: 2
        - if:
            condition:
              and:
                - switch.is_on: relay_fan_1
                - switch.is_off: relay_fan_2
                - switch.is_on: relay_fan_3
            then:
              - fan.turn_on:
                  id: fan_1
                  speed: 3
